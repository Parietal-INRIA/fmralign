---
# Workflow to build the documentation.
name: Documentation builder
on:
    push:
        branches:
        -   main
    pull_request:
        branches:
        -   '*'
jobs:
  # Steps to build the documentation.
    build_docs:
    # This prevents this workflow from running on a fork.
        if: github.repository == 'nilearn/nilearn'
        runs-on: ubuntu-latest
        timeout-minutes: 360
        defaults:
            run:
                shell: bash -el {0}
        steps:
        -   name: Source caching
            uses: actions/cache@v3
            with:
                path: .git
                key: source-cache-${{ runner.os }}-${{ github.run_id }}
                restore-keys: |
                    source-cache-${{ runner.os }}
        -   name: Checkout nilearn
            uses: actions/checkout@v3
            with:
          # If pull request, checkout HEAD commit with all commit history
                ref: ${{ github.event.pull_request.head.sha }}
                fetch-depth: 0
        -   name: Complete checkout
            run: |
                set -x
                if ! git remote -v | grep upstream; then
                  git remote add upstream https://github.com/nilearn/nilearn.git
                fi
                git fetch upstream
        -   name: Merge with upstream
            run: |
                set -x
                echo $(git log -1 --pretty=%B) | tee gitlog.txt
                echo "gitlog.txt = $(cat gitlog.txt)"
                echo $GITHUB_REF_NAME | tee merge.txt
                if [ "$GITHUB_REF_NAME" != "main" ]; then
                    echo "Merging $(cat merge.txt)";
                    git pull --ff-only upstream "refs/pull/$(cat merge.txt)";
                fi
      # Set up environment
        -   name: Install apt packages
            run: |
                ./build_tools/github/build_docs_apt_dependencies.sh
        -   name: Setup conda
            uses: conda-incubator/setup-miniconda@v2
            with:
                auto-activate-base: true
                activate-environment: ''
                miniconda-version: latest
                channels: conda-forge
        -   name: Install packages in conda env
            run: |
                ./build_tools/github/build_docs_dependencies.sh

      # Run the doc build. 
        -   name: Build docs
            run: |
                source activate testenv
                echo "Conda active env = $CONDA_DEFAULT_ENV";
                cd doc;
                set -o pipefail;
                make html | tee log.txt;
        -   name: Upload documentation
            uses: actions/upload-artifact@v3
            with:
                name: doc
                path: doc/_build/html
