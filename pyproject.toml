[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
authors = [
    {name = "Elizabeth DuPre", email = "emd222@cornell.edu"},
    {name = "Thomas Bazeille"},
    {name = "Bertrand Thirion"}
]
classifiers = [
    "Programming Language :: Python :: 3"
]
dependencies = [
    "numpy<2",
    "pandas",
    "matplotlib",
    "scikit-learn",
    "joblib",
    "scipy",
    "nibabel",
    "nilearn>=0.10.3",
    "POT",
    "fastsrm",
    "fugw>=0.1.1",
    "torch"
]
description = "Functional alignment for fMRI"
dynamic = ["version"]
license = {file = "LICENSE"}
name = "fmralign"
readme = "README.md"
requires-python = ">=3.9"

[project.optional-dependencies]
# Useful for development
dev = [
    "fmralign[jax,doc,test]",
    "ruff"
]
# For building the documentation
doc = [
    "coverage",
    "myst-parser",
    "numpydoc",
    "ruamel.yaml",
    "sphinx",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinx-gallery",
    "sphinxcontrib-bibtex",
    "sphinxext-opengraph",
    "furo"
]
# To use JAX-accelerated Optimal Transport
jax = ["jax", "ott-jax > 0.3.0"]
# For running unit and docstring tests
test = [
    "coverage",
    "pytest>=6.0.0",
    "pytest-cov"
]

[tool.hatch.build.hooks.vcs]
version-file = "fmralign/_version.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
source = "vcs"

[tool.ruff]
extend-exclude = [
    "doc/auto_examples/*"
]
include = ["pyproject.toml", "fmralign/**/*.py", "examples/**/*.py", "doc/**/*.py"]
indent-width = 4
line-length = 79

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.mccabe]
max-complexity = 41

[tool.ruff.lint.per-file-ignores]
"{doc}/*" = ["D103"]
"{examples}/*" = ["B018", "D103", "D400", "E402"]
"*/{tests}/*" = ["D100", "D101", "D102", "D103", "D104", "D205", "D400", "D401"]
"__init__.py" = ["D104", "E402"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
# https://docs.astral.sh/ruff/settings/#lint_pylint_max-args
max-args = 26
# https://docs.astral.sh/ruff/settings/#lint_pylint_max-branches
max-branches = 48
# https://docs.astral.sh/ruff/settings/#lint_pylint_max-returns
max-returns = 7
# https://docs.astral.sh/ruff/settings/#lint_pylint_max-statements
max-statements = 151
